---
import PageLayout from "../../layouts/PageLayout.astro";
import Section from "../../components/Section.astro";
import Container from "../../components/Container.astro";
import MemberSummary from "../../components/MemberSummary.astro";
import { members, POSSIBLE_ROLES, ROLE_CONFIGS } from "../../data";
import { Icon } from "astro-icon/components";

export function getStaticPaths() {
  return [...POSSIBLE_ROLES, undefined].map((role) => ({
    params: { filter: role },
  }));
}

const { filter } = Astro.params;

const filteredMembers = members.filter((member) => {
  if (filter === undefined) return true;
  return member.roles.includes(filter);
});
---

<PageLayout title="Community">
  <Section inline title="Community" button={{ text: "Switch", href: "/members" }} />
  <Section>
    <div class="flex justify-between items-center">
      <div class="join">
        <a href="/community" class={`btn join-item ${filter === undefined ? "btn-primary" : ""}`}>
          <Icon name="lucide:users" size={20} class="mr-2" />
          Everyone
        </a>
        {
          POSSIBLE_ROLES.map((role) => {
            const config = ROLE_CONFIGS[role];
            return (
              <a
                href={`/community/${role}`}
                class={`btn join-item ${filter === role ? "btn-primary" : ""}`}
              >
                <Icon name={config.icon} size={20} class="mr-2" />
                {config.plural}
              </a>
            );
          })
        }
      </div>
      <div class="text-sm opacity-70">
        {
          filteredMembers.length === 1
            ? "Showing 1 member"
            : `Showing ${filteredMembers.length} members`
        }
      </div>
    </div>
  </Section>
  <Container wide grid>
    {
      filteredMembers.map((member) => (
        <div>
          <MemberSummary member={member} />
        </div>
      ))
    }
  </Container>
</PageLayout>
