---
import PageLayout from "../../layouts/PageLayout.astro";
import Section from "../Section.astro";
import PersonDetails from "./PersonDetails.astro";
import PersonNav from "./PersonNav.astro";
import EventFeatured from "../EventFeatured.astro";
import StickyNavigation from "../StickyNavigation.astro";

import { getEvents, resolvePerson } from "../../data";

const person = await resolvePerson(Astro);

const events = await getEvents();
const personEvents = events.filter((event) =>
  person.events.find((e) => event.id.startsWith(`${e}`)),
);

// Create description from bio or roles
const roleDescriptions = person.roles
  .map((role) => role.charAt(0).toUpperCase() + role.slice(1))
  .join(", ");
const description = person.bio
  ? person.bio.slice(0, 160) + (person.bio.length > 160 ? "..." : "")
  : `${person.name} - ${roleDescriptions} at ${person.company || "the tech community"}`;

// OG image params for person
const ogImageParams = {
  type: "person" as const,
  slug: person.id,
};
---

<PageLayout
  title={`${person.name} - Community`}
  description={description}
  type="profile"
  ogImageParams={ogImageParams}
>
  <Section>
    <PersonDetails person={person} />
  </Section>
  {
    personEvents.length > 0 && (
      <Section title="Events">
        <div class="flex flex-col gap-8 pt-8">
          {personEvents.map((event) => (
            <EventFeatured eventSlug={event.id} />
          ))}
        </div>
      </Section>
    )
  }
  <Section>
    <PersonNav class="person-navigation" />
  </Section>

  <StickyNavigation navigationClass="person-navigation">
    <PersonNav />
  </StickyNavigation>
</PageLayout>
