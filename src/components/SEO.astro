---
export interface Props {
  title?: string;
  description?: string;
  canonical?: string;
  image?: string;
  type?: "website" | "article" | "profile";
  article?: {
    author?: string;
    publishedTime?: string;
    modifiedTime?: string;
    tags?: string[];
  };
  noindex?: boolean;
  nofollow?: boolean;
  ogImageParams?: {
    type?: "default" | "event" | "person" | "venue";
    slug?: string;
  };
}

const {
  title,
  description = "Join the Osaka Kansai Tech Meetup Group - A vibrant community for web developers, designers, and tech enthusiasts in the Kansai region.",
  canonical,
  image,
  type = "website",
  article,
  noindex = false,
  nofollow = false,
  ogImageParams,
} = Astro.props;

import { SITE } from "../config";
import { getOGImageURL } from "../utils/ogImage";

const pageTitle = title ? SITE.title.template.replace("%s", title) : SITE.title.default;
const resolvedCanonical = canonical || Astro.url.href;

// Generate OG image URL
let ogImage = image;
if (!ogImage) {
  if (ogImageParams?.type && ogImageParams?.slug) {
    // Use dynamic OG image for specific content
    ogImage = getOGImageURL(ogImageParams, Astro.url);
  } else {
    // Use default OG image
    ogImage = getOGImageURL({}, Astro.url);
  }
}

const robotsContent = [noindex ? "noindex" : "index", nofollow ? "nofollow" : "follow"].join(", ");
---

<meta charset="UTF-8" />
<meta
  name="viewport"
  content="width=device-width, initial-scale=0.8, maximum-scale=0.8, user-scalable=no"
/>
<meta name="generator" content={Astro.generator} />

<title>{pageTitle}</title>
<meta name="description" content={description} />
<link rel="canonical" href={resolvedCanonical} />

<meta name="robots" content={robotsContent} />

<meta property="og:title" content={pageTitle} />
<meta property="og:description" content={description} />
<meta property="og:url" content={resolvedCanonical} />
<meta property="og:type" content={type} />
<meta property="og:site_name" content={SITE.name} />
<meta property="og:locale" content="en_US" />

<meta property="og:image" content={ogImage} />
<meta property="og:image:alt" content={title || SITE.name} />
<meta property="og:image:width" content="1200" />
<meta property="og:image:height" content="630" />

<meta name="twitter:card" content="summary_large_image" />
<meta name="twitter:site" content="@owddm" />
<meta name="twitter:title" content={pageTitle} />
<meta name="twitter:description" content={description} />
<meta name="twitter:image" content={ogImage} />
<meta name="twitter:image:alt" content={title || SITE.name} />

{
  article && (
    <>
      {article.author && <meta property="article:author" content={article.author} />}
      {article.publishedTime && (
        <meta property="article:published_time" content={article.publishedTime} />
      )}
      {article.modifiedTime && (
        <meta property="article:modified_time" content={article.modifiedTime} />
      )}
      {article.tags && article.tags.map((tag) => <meta property="article:tag" content={tag} />)}
    </>
  )
}

<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
<link rel="icon" type="image/png" href="/favicon.png" />
