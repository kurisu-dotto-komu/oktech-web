---
import { Icon } from "astro-icon/components";
import Link from "./Link.astro";

interface Props {
  buttonText: string;
  buttonIcon: string;
  clearText?: string;
  clearHref?: string;
  items: Array<{
    href: string;
    text: string;
    count?: number;
  }>;
}

const { buttonText, buttonIcon, clearText, clearHref, items } = Astro.props;
---

<div class="dropdown dropdown-bottom">
  <div tabindex="0" role="button" class={`btn btn-lg ${clearText ? "btn-primary" : ""}`}>
    <Icon name={buttonIcon} size={20} />
    {buttonText}
    <Icon name="lucide:chevron-down" size={20} />
  </div>
  <div tabindex="0" class="dropdown-content z-[1] mt-2 md:min-w-[70vw]">
    <div class="flex flex-wrap gap-1">
      {
        clearHref && (
          <Link
            href={clearHref}
            class="btn btn-sm btn-accent justify-start text-left text-sm px-4 py-2 whitespace-nowrap flex gap-2"
          >
            <Icon name="lucide:x" size={20} />
            {clearText}
          </Link>
        )
      }
      {
        items
          .filter((item) => item.text !== buttonText)
          .map((item) => (
            <Link
              href={item.href}
              class="btn btn-sm justify-start text-left text-sm px-4 py-2 whitespace-nowrap flex items-baseline gap-2"
            >
              <span>{item.text}</span>
              {item.count !== undefined && <span class="text-sm opacity-60">{item.count}</span>}
            </Link>
          ))
      }
    </div>
  </div>
</div>
