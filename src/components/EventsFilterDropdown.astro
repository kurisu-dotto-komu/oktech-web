---
import { Icon } from "astro-icon/components";
import Link from "./Link.astro";

interface Props {
  buttonText: string;
  buttonIcon: string;
  clearText?: string;
  clearHref?: string;
  items: Array<{
    href: string;
    text: string;
  }>;
}

const { buttonText, buttonIcon, clearText, clearHref, items } = Astro.props;
---

<div class="dropdown">
  <div
    tabindex="0"
    role="button"
    class={`btn btn-lg ${clearText ? "bg-base-100 text-primary-content" : ""}`}
  >
    <Icon name={buttonIcon} size={20} />
    {buttonText}
    <Icon name="lucide:chevron-down" size={20} />
  </div>
  <div tabindex="0" class="dropdown-content z-[1] p-2 w-max max-w-[70vw] overflow-y-auto">
    <div class="flex flex-wrap gap-1">
      {
        clearHref && (
          <Link
            href={clearHref}
            class="btn btn-sm btn-error justify-start text-left text-lg px-4 py-2 h-auto min-h-0 font-normal whitespace-nowrap bg-error hover:bg-error/80 border-0"
          >
            <Icon name="lucide:x" size={20} />
            {clearText}
          </Link>
        )
      }
      {
        items
          .filter((item) => item.text !== buttonText)
          .map((item) => (
            <Link
              href={item.href}
              class="btn btn-sm justify-start text-left text-lg px-4 py-2 h-auto min-h-0 font-normal whitespace-nowrap bg-base-100 hover:bg-base-300 border-0"
            >
              {item.text}
            </Link>
          ))
      }
    </div>
  </div>
</div>
