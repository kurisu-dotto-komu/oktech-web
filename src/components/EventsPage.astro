---
import EventsFilter from "./EventsFilter.astro";
import SearchBox from "./SearchBox.astro";
import { getEvents } from "../data";
import PageLayout from "../layouts/PageLayout.astro";
import Section from "./Section.astro";
import ButtonGroup from "./ButtonGroup.astro";
import EventsViewGallery from "./EventsViewGallery.astro";
import EventsViewGrid from "./EventsViewGrid.astro";
import EventsViewCompact from "./EventsViewCompact.astro";

interface Props {
  filterType?: string;
  filterValue?: string;
  viewMode?: "default" | "compact" | "gallery";
}

const { filterType, filterValue, viewMode = "default" } = Astro.props;

// Get all events
let events = await getEvents();

// Apply filters
if (filterType === "location" && filterValue) {
  events = events.filter((event) => event.venue?.city === filterValue);
} else if (filterType === "topic" && filterValue) {
  events = events.filter((event) => {
    if (!event.data.topics) return false;
    return event.data.topics.some((topic: string) => {
      const slug = topic
        .toLowerCase()
        .replace(/[^a-z0-9]+/g, "-")
        .replace(/^-|-$/g, "");
      return slug === filterValue;
    });
  });
}

const selectedCity = filterType === "location" ? filterValue : undefined;
const selectedTopic = filterType === "topic" ? filterValue : undefined;

// Helper function to generate view URLs that maintain current filter
const getViewUrl = (view: string) => {
  const basePath = view === "default" ? "/events" : `/events/${view}`;
  if (filterType && filterValue) {
    return `${basePath}/${filterType}/${filterValue}`;
  }
  return basePath;
};

// Create SEO description based on filters
let seoDescription =
  "Browse upcoming and past tech events, workshops, and meetups in Osaka and the Kansai region.";
if (selectedCity) {
  seoDescription = `Tech events and meetups in ${selectedCity}. Join our community for workshops, talks, and networking opportunities.`;
} else if (selectedTopic) {
  seoDescription = `${selectedTopic} events and workshops in Osaka & Kansai. Learn, share, and connect with fellow tech enthusiasts.`;
}
seoDescription += ` ${events.length} events available.`;
---

<PageLayout
  title="Events"
  description={seoDescription}
  ogImageParams={{
    type: "default",
  }}
>
  <Section wide>
    <div class="flex flex-col gap-8">
      <div class="flex items-center justify-between gap-8 flex-col md:flex-row">
        <EventsFilter
          selectedCity={selectedCity}
          selectedTopic={selectedTopic}
          viewMode={viewMode}
        />
        <div class="flex items-center gap-4">
          <ButtonGroup
            buttons={[
              {
                href: getViewUrl("default"),
                icon: "lucide:grid-3x3",
                value: "default",
                title: "Grid view",
              },
              {
                href: getViewUrl("compact"),
                icon: "lucide:list",
                value: "compact",
                title: "Compact view",
              },
              {
                href: getViewUrl("gallery"),
                icon: "lucide:image",
                value: "gallery",
                title: "Gallery view",
              },
            ]}
            active={viewMode}
          />
          <SearchBox />
        </div>
      </div>
    </div>
  </Section>

  {
    viewMode === "gallery" ? (
      <EventsViewGallery events={events} />
    ) : viewMode === "compact" ? (
      <EventsViewCompact events={events} />
    ) : (
      <EventsViewGrid events={events} />
    )
  }
</PageLayout>
