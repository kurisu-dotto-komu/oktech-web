---
import EventsFilter from "./EventsFilter.astro";
import SearchBox from "./SearchBox.astro";
import { getEvents, getEventVenue } from "../data";
import EventSummary from "./EventSummary.astro";
import Grid from "./Grid.astro";
import Button from "./Button.astro";
import PageLayout from "../layouts/PageLayout.astro";
import Section from "./Section.astro";
import EventsUpcoming from "./EventsUpcoming.astro";
import EventFeatured from "./EventFeatured.astro";
import EventGallery from "./EventGallery.astro";

const { filters } = Astro.params;
const url = new URL(Astro.request.url);
const cityFilter = url.searchParams.get('city');

// Get all events
const allEvents = await getEvents();

// Filter events by city if a filter is applied
let events = allEvents;
if (cityFilter && (cityFilter === 'osaka' || cityFilter === 'kyoto')) {
  const filteredEvents = [];
  for (const event of allEvents) {
    const eventData = await import(`../../content/events/${event.id}/event.md`);
    const venueId = eventData.frontmatter.venue;
    const venue = await getEventVenue(venueId);
    if (venue && venue.data.city === cityFilter) {
      filteredEvents.push(event);
    }
  }
  events = filteredEvents;
}

const gallery = filters === "gallery";
---

<PageLayout title="Events">
  <Section wide class="bg-secondary/20">
    <EventsUpcoming />
  </Section>
  <Section wide class="pb-0">
    <div class="flex flex-col gap-8">
      <div class="flex items-center justify-between gap-8 flex-col md:flex-row">
        <EventsFilter currentCity={cityFilter} />
        <div class="flex items-center gap-4">
          <Button
            class="btn btn-lg gap-4"
            text={gallery ? "List" : "Gallery"}
            href={gallery ? "/events" : "/events/gallery"}
            icon={gallery ? "lucide:grid" : "lucide:image"}
          />
          <SearchBox />
        </div>
      </div>
    </div>
  </Section>

  {
    gallery ? (
      <>
        {events.map((event, i) => (
          <Section wide class:list={i % 2 === 0 ? "" : "bg-base-100/50"}>
            <div class="flex flex-col gap-12">
              <EventFeatured slug={event.id} />
              <Grid>
                <EventGallery slug={event.id} />
              </Grid>
            </div>
          </Section>
        ))}
      </>
    ) : (
      <Section grid wide>
        {events.map((event) => (
          <div>
            <EventSummary slug={event.id} />
          </div>
        ))}
      </Section>
    )
  }
</PageLayout>
