---
import SearchInput from "./SearchInput.astro";
import FilterDropdown from "./FilterDropdown.astro";
import SortSelector from "./SortSelector.astro";
import ViewModeSelector from "./ViewModeSelector.astro";

export interface Props {
  collection: "events" | "people";
  currentFilters: {
    search: string;
    topics?: string[];
    location?: string;
    roles?: string[];
    sort: string;
    view: string;
  };
  availableFilters: {
    topics?: string[];
    locations?: string[];
    roles?: string[];
  };
  sortOptions: Array<{ value: string; label: string }>;
}

const { collection, currentFilters, availableFilters, sortOptions } = Astro.props;
---

<div class="sticky top-0 z-40 bg-base-100 border-b border-base-200 py-4 mb-6">
  <div class="flex flex-wrap gap-4 items-center">
    <!-- Search Input -->
    <div class="flex-1 min-w-[200px]">
      <SearchInput 
        value={currentFilters.search} 
        placeholder={`Search ${collection}...`}
      />
    </div>
    
    <!-- Filters -->
    <div class="flex flex-wrap gap-2">
      {collection === "events" && availableFilters.topics && (
        <FilterDropdown
          id="topics"
          label="Topics"
          options={availableFilters.topics}
          selected={currentFilters.topics || []}
          multiple={true}
        />
      )}
      
      {collection === "events" && availableFilters.locations && (
        <FilterDropdown
          id="location"
          label="Location"
          options={availableFilters.locations}
          selected={currentFilters.location ? [currentFilters.location] : []}
          multiple={false}
        />
      )}
      
      {collection === "people" && availableFilters.roles && (
        <FilterDropdown
          id="roles"
          label="Roles"
          options={availableFilters.roles}
          selected={currentFilters.roles || []}
          multiple={true}
        />
      )}
    </div>
    
    <!-- Sort -->
    <SortSelector 
      options={sortOptions}
      selected={currentFilters.sort}
    />
    
    <!-- View Mode -->
    <ViewModeSelector 
      selected={currentFilters.view}
      collection={collection}
    />
  </div>
  
  <!-- Active Filters Display -->
  <div id="active-filters-container" class="mt-2 hidden">
    <div class="flex items-center gap-4">
      <div id="active-filters" class="flex flex-wrap gap-2 flex-1">
        <!-- Will be populated by client-side script -->
      </div>
      <button 
        type="button" 
        id="clear-all-filters"
        class="btn btn-sm btn-ghost"
      >
        Clear All
      </button>
    </div>
  </div>
</div>