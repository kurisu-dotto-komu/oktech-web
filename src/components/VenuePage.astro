---
import { resolveVenue, getEvents, getVenues } from "../data";
import VenueInfo from "./VenueInfo.astro";
import StickyBottomNavButtons from "./StickyBottomNavButtons.astro";
import EventFeatured from "./EventFeatured.astro";
import Section from "./Section.astro";
import StickyNavigation from "./StickyNavigation.astro";
import PageLayout from "../layouts/PageLayout.astro";

const venue = await resolveVenue(Astro);

// Get all venues for prev/next navigation
const venues = await getVenues();
const currentIndex = venues.findIndex((v) => v.id === venue.id);
const prevVenue = currentIndex > 0 ? venues[currentIndex - 1] : null;
const nextVenue = currentIndex < venues.length - 1 ? venues[currentIndex + 1] : null;

const prevItem = prevVenue ? {
  href: `/venue/${prevVenue.id}`,
  title: prevVenue.data.title
} : undefined;

const nextItem = nextVenue ? {
  href: `/venue/${nextVenue.id}`,
  title: nextVenue.data.title
} : undefined;

const backButton = {
  href: "/",
  icon: "lucide:home",
  text: "Home"
};

// Get all events for this venue
const allEvents = await getEvents();
const venueEvents = allEvents.filter(
  (event) => event.data.venue?.id === venue.data.meetupId.toString(),
);

// Import the venue markdown content if it exists
let Content;
try {
  const module = await import(`../../content/venues/${venue.id}/venue.md`);
  Content = module.Content;
} catch (error) {
  // No markdown content for this venue
  Content = null;
}
---

<PageLayout title={`${venue.data.title} - Venues`}>
  <div class="pb-20">
    <Section>
      <StickyBottomNavButtons
        prevItem={prevItem}
        nextItem={nextItem}
        backButton={backButton}
        class="venue-navigation mb-8"
      />
    
    <!-- Mobile header -->
    <div class="md:hidden flex flex-col gap-6">
      <h1 class="text-4xl font-bold pt-6">{venue.data.title}</h1>
      <VenueInfo />
    </div>

    <div class="flex flex-col md:flex-row gap-12">
      <!-- Main content -->
      <div class="w-full flex flex-col gap-10">
        <!-- Desktop title -->
        <h1 class="hidden md:block text-4xl font-bold pt-6">{venue.data.title}</h1>

        <!-- Venue description content -->
        {
          Content && (
            <div class="max-w-none prose prose-lg">
              <Content />
            </div>
          )
        }
      </div>

      <!-- Sticky sidebar for desktop -->
      <div class="hidden md:block md:w-1/3 relative">
        <div class="sticky top-20 flex flex-col gap-8">
          <div class="card bg-base-100 shadow-lg rounded-lg overflow-hidden">
            <div class="card-body p-0">
              <VenueInfo />
            </div>
          </div>
        </div>
      </div>
    </div>
  </Section>

  {
    venueEvents.length > 0 && (
      <Section>
        <h2 class="text-2xl font-bold mb-8">Events Hosted at {venue.data.title}</h2>
        <div class="flex flex-col gap-8">
          {venueEvents.map((event) => (
            <EventFeatured eventSlug={event.id} />
          ))}
        </div>
      </Section>
    )
  }
  </div>

  <StickyNavigation navigationClass="venue-navigation">
    <StickyBottomNavButtons
      prevItem={prevItem}
      nextItem={nextItem}
      backButton={backButton}
    />
  </StickyNavigation>
</PageLayout>
