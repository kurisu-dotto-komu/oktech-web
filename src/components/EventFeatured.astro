---
import { Icon } from "astro-icon/components";
import { resolveEvent } from "../data";
import Link from "./Link.astro";
import { Image } from "astro:assets";
import { formatDate, formatTime } from "../utils/formatDate";
import VenueMap from "./VenueMap.astro";
import EventCity from "./EventCity.astro";

interface Props {
  eventSlug: string;
  hideMap?: boolean;
}

const { hideMap = false } = Astro.props;
const event = await resolveEvent(Astro);

const formattedDate = formatDate(event.data.dateTime, "long");
const formattedTime = formatTime(event.data.dateTime);
---

<Link
  class="card rounded-xl bg-base-100 h-full hover-zoom flex flex-col lg:flex-row shadow-md w-full hover:shadow-lg overflow-hidden"
  href={`/event/${event.id}`}
>
  <!-- Left side - Image (1/3 width) -->
  <div class="lg:w-1/3">
    <figure class="aspect-video lg:aspect-auto w-full h-full">
      <Image
        src={event.data.cover}
        alt="Event cover"
        class="bg-base-300 w-full h-full object-cover"
        width={512}
        height={512}
      />
    </figure>
  </div>

  <!-- Right side - Details and Map (2/3 width) -->
  <div class="lg:w-2/3 flex">
    <div class="flex-1">
      <div class="flex flex-col h-full md:flex-row">
        <!-- Left side - Event Details -->
        <div class={`flex flex-col p-6 ${hideMap ? "w-full" : "md:w-2/3"}`}>
          <h3 class="card-title text-2xl mb-4">{event.data.title}</h3>

          <div class="flex flex-col gap-3 text-base mb-4">
            <div class="flex gap-2 items-center">
              <Icon name="lucide:calendar" size={20} />
              <span>{formattedDate} â€¢ {formattedTime}</span>
            </div>
            {
              event.data.duration && (
                <div class="flex gap-2 items-center">
                  <Icon name="lucide:clock" size={20} />
                  <span>{event.data.duration / 60} hours</span>
                </div>
              )
            }
            {
              event.venue && (
                <div class="flex gap-2 items-center">
                  <Icon name="lucide:map-pin" size={20} />
                  <span>{event.venue.title}</span>
                </div>
              )
            }
          </div>

          {/* Topics/Tags */}
          {
            event.data.topics && event.data.topics.length > 0 && (
              <div class="flex gap-2 flex-wrap">
                {event.data.topics.map((topic) => (
                  <span class="badge badge-sm badge-neutral whitespace-nowrap flex-shrink-0">
                    {topic}
                  </span>
                ))}
              </div>
            )
          }
        </div>

        <!-- Right side - Map -->
        {
          !hideMap && event.venueSlug && (
            <div class="w-full md:w-1/2 lg:w-1/3 h-full hidden lg:block border-l-2 border-dotted border-base-content/30 relative">
              <div class="h-full w-full">
                <VenueMap venueSlug={event.venueSlug} marker={event.venue?.title} />
              </div>
              {event.venue?.city && (
                <div class="absolute bottom-2 right-2">
                  <EventCity city={event.venue.city} />
                </div>
              )}
            </div>
          )
        }
      </div>
    </div>
  </div>
</Link>
